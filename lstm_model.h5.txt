import numpy as np
import pandas as pd
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

# Load dataset
df = pd.read_csv("Student Depression Dataset.csv").dropna()

# Convert categorical values to numerical
df["Gender"] = df["Gender"].map({"Male": 0, "Female": 1})
df["Family History of Mental Illness"] = df["Family History of Mental Illness"].map({"No": 0, "Yes": 1})
df["Have you ever had suicidal thoughts ?"] = df["Have you ever had suicidal thoughts ?"].map({"No": 0, "Yes": 1})
df["Depression"] = df["Depression"].astype(int)

# Select features and target variable
features = ["Gender", "Age", "Academic Pressure", "Work Pressure", "CGPA", 
            "Study Satisfaction", "Job Satisfaction", "Work/Study Hours", 
            "Financial Stress", "Family History of Mental Illness", 
            "Have you ever had suicidal thoughts ?"]

X = df[features].values
y = df["Depression"].values

# Standardize data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Reshape for LSTM (samples, time steps, features)
X_scaled = X_scaled.reshape(X_scaled.shape[0], 1, X_scaled.shape[1])

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Build LSTM Model
model = Sequential([
    LSTM(50, return_sequences=True, input_shape=(1, X_scaled.shape[2])),
    Dropout(0.2),
    LSTM(50, return_sequences=False),
    Dropout(0.2),
    Dense(25, activation='relu'),
    Dense(1, activation='sigmoid')
])

# Compile model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train model
model.fit(X_train, y_train, epochs=50, batch_size=16, validation_data=(X_test, y_test))

# Save model
model.save("lstm_model.h5")

print("âœ… Model training complete. File saved as 'lstm_model.h5'")
